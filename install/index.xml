<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installs on </title>
    <link>http://127.0.0.1:1313/hugo/install/</link>
    <description>Recent content in Installs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 20 Jan 2022 10:52:39 +0800</lastBuildDate><atom:link href="http://127.0.0.1:1313/hugo/install/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K8s</title>
      <link>http://127.0.0.1:1313/hugo/install/k8s/</link>
      <pubDate>Thu, 20 Jan 2022 10:52:39 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/k8s/</guid>
      <description>k8s 安装 1. 安装前装备 1.1 检查 centos cat /etc/redhat-releas 1.2 检查hostname   此处hostname的输出将会是该机器在K8s 集群中的名字
hostnamectl set-hostname &amp;lt;newhostname&amp;gt;   1.3 检查CPU的信息   Architecture: x86_64
  CPU(s): 2
lscpu   1.4 检查网卡信息   ip route show
  可以得知图中 默认的网卡为eth0
  ip address (相关命令)
  保证 k8s的节点的ip 相互之间能ping (无需 NAT 映射、无安全组或防火墙隔离)
  1.5 关闭selinux   setenforce 0
  屏蔽 setenforce 0 永久屏蔽 sed -i &amp;#39;s/SELINUX=enforcing/SELINUX=disabled/g&amp;#39; /etc/selinux/config 1.</description>
    </item>
    
    <item>
      <title>Navicat</title>
      <link>http://127.0.0.1:1313/hugo/install/navicat/</link>
      <pubDate>Wed, 05 Jan 2022 14:52:50 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/navicat/</guid>
      <description>navicat安装环境 install capstone sudo apt-get install libcapstone-dev
install keystone sudo apt-get install cmake wget http://10.168.2.83:10099/keystone.tar.gz tar -zxvf keystone.tar.gz cd keystone mkdir build cd build ../make-share.sh sudo make install sudo ldconfig install rapidjson sudo apt-get install rapidjson-dev install openssl sudo apt-get install openssl sudo apt install libssl-dev wget http://10.168.2.83:10099/navicat-keygen.tar.gz tar -zxvf navicat-keygen.tar.gz cd navicat-keygen make all 下载破解和一些文件夹 mkdir -p /home/zhu/software/navicat/ mkdir -p /home/zhu/software/navicat/navicat15-premium-cs cd /home/zhu/software/navicat/ wget http://10.168.2.83:10099/navicat15-premium-cs.AppImage sudo mount -o loop .</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>http://127.0.0.1:1313/hugo/install/virtualbox/</link>
      <pubDate>Wed, 05 Jan 2022 14:52:04 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/virtualbox/</guid>
      <description>centos7.8 虚拟机 查看自己的内核  这个是可以安装的 内核版本 小版本也要对应  [root@localhost sdb]# rpm -qa |grep kernel kernel-3.10.0-1127.el7.x86_64 kernel-tools-libs-3.10.0-1127.el7.x86_64 kernel-headers-3.10.0-1127.19.1.el7.x86_64 kernel-devel-3.10.0-1127.19.1.el7.x86_64 kernel-devel-3.10.0-1127.el7.x86_64 abrt-addon-kerneloops-2.1.11-57.el7.centos.x86_64 kernel-tools-3.10.0-1127.el7.x86_64 添加VirtualBox安装源 cd /etc/yum.repos.d/ yum install wget wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo 安装 yum update yum install binutils qt gcc make patch libgomp glibc-headers glibc-devel kernel-headers kernel-devel dkms 记得对应版本安装 kernel  版本下表  kernel-3.10.0-1127.el7.x86_64 kernel-tools-libs-3.10.0-1127.el7.x86_64 kernel-tools-3.10.0-1127.el7.x86_64 kernel-devel-3.10.0-1127.el7.x86_64 kernel-headers-3.10.0-1127.19.1.el7.x86_64  如果不一致 则安装一致的版本  yum install kernel-headers-$(uname -r) kernel-devel-$( uname -r) -y </description>
    </item>
    
    <item>
      <title>Chronyd</title>
      <link>http://127.0.0.1:1313/hugo/install/chronyd/</link>
      <pubDate>Wed, 05 Jan 2022 14:51:19 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/chronyd/</guid>
      <description>Chronyd chronyd是一个同步系统时钟的守护进程。
从Centos7开始默认安装时钟同步服务chronyd，而不是ntpd。
# dnf -y install chronyd # eccho &#39;server ntp1.aliyun.com iburst&#39; &amp;gt;&amp;gt; /etc/chrony.conf # systemctl enable chronyd.service &amp;amp;&amp;amp; systemctl start chronyd.service Chronyc chronyc is a command-line interface program which can be used to monitor chronyd’s performance and to change various operating parameters whilst it is running.
# chronyc sources -v .-- Source mode &#39;^&#39; = server, &#39;=&#39; = peer, &#39;#&#39; = local clock. / .- Source state &#39;*&#39; = current synced, &#39;+&#39; = combined , &#39;-&#39; = not combined, | / &#39;?</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>http://127.0.0.1:1313/hugo/install/kernel/</link>
      <pubDate>Wed, 05 Jan 2022 14:50:41 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/kernel/</guid>
      <description>centos7 更新内核 在 CentOS 7 上启用 ELRepo 仓库 rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm 查询可下载的内核包  yum --disablerepo=&amp;quot;*&amp;quot; --enablerepo=&amp;quot;elrepo-kernel&amp;quot; list available 安装  yum --enablerepo=elrepo-kernel install kernel-ml 查看是否安装成功 rpm -qa |grep kernel </description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>http://127.0.0.1:1313/hugo/install/mysql/</link>
      <pubDate>Wed, 05 Jan 2022 14:40:06 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/mysql/</guid>
      <description>mysql 相关 安装 mysql 相关   查看mariadb数据库 rpm -qa | grep mariadb
  卸载数据库：yum -y remove mari*
  删除数据库文件： rm -rf /var/lib/mysql/*
  根据某某安装
 根据rpm安装  rpm -ivh mysql-community-common-5.7.24-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.24-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.24-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.24-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.24-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm  yum 安装  wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm yum -y install mysql57-community-release-el7-10.noarch.rpm yum -y install mysql-community-server      启动 mysql</description>
    </item>
    
    <item>
      <title>Zookeeper</title>
      <link>http://127.0.0.1:1313/hugo/install/zookeeper/</link>
      <pubDate>Wed, 05 Jan 2022 11:36:51 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/zookeeper/</guid>
      <description>zookeeper集群搭建 一、下载zookeeper  进入将要安装的目录 cd /home/htga/zookeeper wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz  二、解压  tar -zxvf zookeeper-3.4.14.tar.gz  三、复制配置文件名称  cd zookeeper-3.4.14/conf/ cp zoo_sample.cfg zoo.cfg  四、修改配置文件 # The number of milliseconds of each tick tickTime=2000 # The number of ticks that the initial # synchronization phase can take initLimit=10 # The number of ticks that can pass between # sending a request and getting an acknowledgement syncLimit=5 # the directory where the snapshot is stored.</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>http://127.0.0.1:1313/hugo/install/kafka/</link>
      <pubDate>Wed, 05 Jan 2022 11:35:47 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/kafka/</guid>
      <description>kafka集群搭建 下载地址  http://kafka.apache.org/downloads.html  开始部署  进入项目前的目录 cd /home/test/ 创建项目目录 mkdir kafka 进入项目目录 cd /home/test/kafka 创建kafka消息目录，主要存放kafka消息 mkdir kafkalogs 进入项目目录 cd /home/test/kafka 上传 kafka_2.10-0.10.0.0.tgz 安装包 解压 tar zxvf kafka_2.10-0.10.0.0.tgz -C ./ cd /home/test/kafka/kafka_2.11-0.10.0.0/config 打开配置文件 vim server.properties  ------------------------配置文件------------------------------------- broker.id=1 /* 这是这台虚拟机上的值，在另外两台虚拟机上应该是2或者3，这个值是唯一的，每台虚拟机或者叫服务器不能相同。 */ listeners=PLAINTEXT://test01:9092 /设置本机IP和端口。我这里设置的是listeners， 也可以直接设置host.name=test01,port=9092, 这个IP地址也是与本机相关的，每台服务器上设置为自己的IP地址。/ log.dirs=/home/test/kafka/kafkalogs #指定其与另外几台一样的ip zookeeper.connect=test01:2181,test01:2181,test02:2181 delete.topic.enable=true num.network.threads=3 #这个是borker进行网络处理的线程数 num.io.threads=8 #这个是borker进行I/O处理的线程数 socket.send.buffer.bytes=102400 #发送缓冲区buffer大小，数据不是一下子就发送的，先回存储到缓冲区了到达一定的大小后在发送，能提高性能 socket.receive.buffer.bytes=102400 #kafka接收缓冲区大小，当数据到达一定大小后在序列化到磁盘 socket.request.max.bytes=104857600 #这个参数是向kafka请求消息或者向kafka发送消息的请请求的最大数，这个值不能超过java的堆栈大小 num.partitions=1 #默认的分区数，一个topic默认1个分区数 log.retention.hours=168 #默认消息的最大持久化时间，168小时，7天 message.max.byte=5242880 #消息保存的最大值5M default.replication.factor=2 #kafka保存消息的副本数，如果一个副本失效了，另一个还可以继续提供服务 replica.fetch.max.bytes=5242880 #取消息的最大直接数 log.</description>
    </item>
    
    <item>
      <title>Redis安装问题</title>
      <link>http://127.0.0.1:1313/hugo/install/redis%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 04 Jan 2022 20:47:06 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/redis%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</guid>
      <description>title: redis安装可能遇到的错误 date: 2020-10-29 18:05:52 permalink: /pages/1b76b7/ categories:
 database redis tags:    redis安装可能遇到的错误 redis安装过程中执行gem install redis-3.0.0 报错 ##【Redis】ERROR: Could not find a valid gem &amp;lsquo;redis-3.0.0&amp;rsquo; (&amp;gt;= 0) in any repository
 1.由于gem没有包含自身携带的源，所以需要下载gem源 2.http://rubygems.org是gem本身带的源 3.如果需要国内源，可以卸载自身携带的，安装国内源 4.查看是否存在http://rubygems.org gem source  表示没有gem源 5.安装http://rubygems.org gem sources -a https://rubygems.org 6. 重新安装redis-3.0.0.gem gem install redis  7. 安装完成 参考网址
redis 集群:CLUSTERDOWN The cluster is down  1.执行192.168.200.130:7001&amp;gt; set name jia 2.报错： (error)CLUSTERDOWN The cluster is down 3.</description>
    </item>
    
    <item>
      <title>Redis集群搭建</title>
      <link>http://127.0.0.1:1313/hugo/install/redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 04 Jan 2022 20:44:58 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid>
      <description>redis集群搭建 安装环境  redis版本redis-3.0.7 虚拟机系统centos7.4 用户 root 三台服务器：  192.168.200.128 192.168.200.129 192.168.200.130 每台服务器redis三个端口号 7000～7002    安装步骤  第一步：在三台服务器上分别安装单机版redis,安装过程见单机版reids搭建 第二步：安装ruby  yum install ruby 出现【y/n】,选y   第三步：安装rubygems组件  yum install rubygems 出现【y/n】,选y   第四步：安装ruby脚本运行使用的包  [root@redis redis-cluster]# gem install redis &amp;ndash;version 3.0.7     安装成功会出现如下提示: Successfully installed redis-3.0.7 1 gem installed Installing ri documentation for redis-3.0.7… Installing RDoc documentation for redis-3.0.7…  第五步：redis集群配置文件准备
 mkdir -p redis/redis-3.</description>
    </item>
    
    <item>
      <title>Redis单机版搭建</title>
      <link>http://127.0.0.1:1313/hugo/install/redis%E5%8D%95%E6%9C%BA%E7%89%88%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 04 Jan 2022 20:43:11 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/redis%E5%8D%95%E6%9C%BA%E7%89%88%E6%90%AD%E5%BB%BA/</guid>
      <description>redis单机版搭建 安装环境  redis版本redis-5.0.7 虚拟机系统centos7.4 用户 root 下载地址 http://download.redis.io/releases/  安装步骤   进入安装目录
 cd /usr/local/redis (编译目录)    下载redis并解压到指定目录
  wget http://download.redis.io/releases/redis-5.0.7.tar.gz
  tar zxvf redis-5.0.7.tar.gz
  cd redis-5.0.7/
    编译安装redis
 cd /usr/local/redis/redis-5.0.7 make make install    修改redis.conf配置文件
 vim redis.conf  daemonize no --&amp;gt; daemonize yes bind 127.0.0.1 --&amp;gt; # bind 127.0.0.1 requirepass 123 指定密码123   复制几个配置文件</description>
    </item>
    
    <item>
      <title>Pgsql安装</title>
      <link>http://127.0.0.1:1313/hugo/install/pgsql%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 04 Jan 2022 20:18:35 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/pgsql%E5%AE%89%E8%A3%85/</guid>
      <description>centos7.8安装pgsql13 PgSql的安装 1.配置repo cd /etc/yum.repos.d vim pgsql.repo ## 以下为内容 [postgresql] name=postgresql baseurl=https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/13/redhat/rhel-7.8-$basearch/ enabled=1 gpgcheck=0 ## 以上为内容 2.安装pgsql ## 安装pgsql yum install postgresql13 -y yum install postgresql13-server -y 3.初始化pgsql /usr/pgsql-13/bin/postgresql-13-setup initdb 4.设置自动启动并且启动postgresql服务 systemctl enable postgresql-13 systemctl start postgresql-13 创建用户和数据库  切换用户  su - postgres  进入pgsql 控制台  psql  进行配置  create user dong_user with password &amp;#39;dong_passwd&amp;#39;; // 创建用户 create database dong_db owner dong_user; // 创建数据库 grant all privileges on database dong_db to dong_user; // 授权 ALTER ROLE dong_user WITH CREATEDB; // 修改用户有创建数据库的权限  推出  \q 修改配置文件  文件: /var/lib/pgsql/13/data/postgresql.</description>
    </item>
    
    <item>
      <title>Docker安装</title>
      <link>http://127.0.0.1:1313/hugo/install/docker%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 04 Jan 2022 19:10:33 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/docker%E5%AE%89%E8%A3%85/</guid>
      <description>docker安装 一、yum安装 1. 卸载原来的docker sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 2. 安装前置库 sudo yum install -y yum-utils \ device-mapper-persistent-data \ lvm2 3. 下载 docker-ce 的仓库 sudo yum-config-manager \ --add-repo \ https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo # 另外的 仓库地址  4. yum 安装仓库 yum install docker-ce docker-ce-cli containerd.io 5. 启动docker sudo systemctl start docker 6. 测试docker是否安装完成 docker run hello-world 7.修改常用参数 1. vim /usr/lib/systemd/system/docker.</description>
    </item>
    
    <item>
      <title>Docker Compose安装</title>
      <link>http://127.0.0.1:1313/hugo/install/docker-compose%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 04 Jan 2022 19:08:15 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/docker-compose%E5%AE%89%E8%A3%85/</guid>
      <description>docker-compose安装步骤 1.下载 url: https://github.com/docker/compose/releases 备用地址：192.168.1.9:8080/share.cgi?ssid=05dGVzz
2.上传 sudo mv docker-compose-Linux-x86_64 /usr/local/bin/docker-compose
3.安装 sudo chmod +x /usr/local/bin/docker-compose</description>
    </item>
    
    <item>
      <title>Vmware安装</title>
      <link>http://127.0.0.1:1313/hugo/install/vmware%E5%AE%89%E8%A3%85/</link>
      <pubDate>Mon, 22 Nov 2021 09:53:29 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/install/vmware%E5%AE%89%E8%A3%85/</guid>
      <description>linux安装VMware Workstation16 1.安装包  VMware-Workstation-Full-16.2.1-18811642.x86_64 下载地址  2.密钥  　ZF3R0-FHED2-M80TY-8QYGC-NPKYF +　YF390-0HF8P-M81RQ-2DXQE-M2UT6 +　ZF71R-DMX85-08DQY-8YMNC-PPHV8 如果不行 自行百度  3.赋予权限  chmod 777 VMware-Workstation-Full-16.2.1-18811642.x86_64.bundle  4.开始安装  sudo ./VMware-Workstation-Full-16.2.1-18811642.x86_64.bundle  5.后续安装  安装界面 跟windows的差不多 类似 (后续补充)  </description>
    </item>
    
  </channel>
</rss>
