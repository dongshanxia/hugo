<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tomcat on My New Hugo Site</title>
    <link>http://127.0.0.1:1313/hugo/tags/tomcat/</link>
    <description>Recent content in tomcat on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 22 Mar 2022 11:02:30 +0800</lastBuildDate><atom:link href="http://127.0.0.1:1313/hugo/tags/tomcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringCloud &#43; SpringGateway 解决Get请求传参为特殊字符导致400无法通过网关转发的问题</title>
      <link>http://127.0.0.1:1313/hugo/java/get%E8%AF%B7%E6%B1%82%E6%97%A0%E6%B3%95%E4%BC%A0%E5%85%A5%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Tue, 22 Mar 2022 11:02:30 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/java/get%E8%AF%B7%E6%B1%82%E6%97%A0%E6%B3%95%E4%BC%A0%E5%85%A5%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</guid>
      <description>SpringCloud + SpringGateway 解决Get请求传参为特殊字符导致400无法通过网关转发的问题 场景: 公司以前的框架统一使用Post请求，传入参数为一个定义的公共类，类里面有个String类型的bean字段传入json字符串作为传参，emmm就想给他改成restful风格，在传入参数公共类无法改变的情况下，Get请求会传入特殊字符，导致400错误。例如：
1  localhost:10001/verify/compreport/month?data={&amp;#34;compRefOwid&amp;#34;:&amp;#34;1448487922485252098&amp;#34;, &amp;#34;yhMonth&amp;#34;:&amp;#34;2021-10&amp;#34;}   原因： Tomcat的新版本中增加了一个新特性，就是严格按照 RFC 3986规范进行访问解析，而 RFC 3986规范定义了Url中只允许包含英文字母（a-zA-Z）、数字（0-9）、-_.~4个特殊字符以及所有保留字符(RFC3986中指定了以下字符为保留字符：! * ’ ( ) ; : @ &amp;amp; = + $ , / ? # [ ])。
解决方案选择：  前端请求时encode特殊字段(算了，不能因为自己的原因加大前端工作量) 改用post请求(emmm没有办法的办法,看着难受就是想要改了) 改Tomcat配置文件(由于是springboot项目，内嵌了tomcat，不方便修改，好吧就是我比较菜) 在后端代码层面解决这个问题  解决方法： 其他服务：由于使用的是内嵌的tomcat，网上常见的 解决spring boot请求包含非法字符问题 The valid characters are defined in RFC 7230 and RFC 3986 错误 配置TomcatServletWebServerFactory的方式使用时会导致两个TomcatServletWebServerFactory使springboot项目报错Unable to start ServletWebServerApplicationContext due to multiple ServletWebServerFactory beans而无法启动。而使用yml配置的方式也无法生效。
1 2 3 4 5 6 7 8 9  server:tomcat:relaxed-query-chars:- &amp;#34;&amp;lt;&amp;#34;- &amp;#34;&amp;gt;&amp;#34;- &amp;#34;[&amp;#34;- &amp;#34;]&amp;#34;- &amp;#34;{&amp;#34;- &amp;#34;}&amp;#34;  随后参考了继承WebServerFactoryCustomizer的方式来修改Tomcat配置</description>
    </item>
    
    <item>
      <title>Tomcat自检程序</title>
      <link>http://127.0.0.1:1313/hugo/linux/shell/tomcat%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 22 Mar 2022 11:02:30 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/shell/tomcat%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</guid>
      <description>tomcat自检 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  #!/bin/bash PROC_NAME=Bootstrap PROC_PATH=/home/test/tomcat/apache-tomcat-7.0.70/bin PROC_START_SH_PATH=/home/test/tomcat/apache-tomcat-7.0.70/bin PROC_START_SH_NAME=startup.sh LOG_FILE=/home/cjpt/test/logs/process_check.log FAIL_LOG_FILE=/home/test/tomcat/logs/process_check_fail.log WEB_URL=&amp;#34;URL:&amp;#34; PROC_ROOT_PATH=/home/test/tomcat/apache-tomcat-7.0.70/ JAVA_HOME_MY=/home/test/jdk/jdk1.8 JRE_HOME_MY=/home/test/jdk/jdk1.8/jre DATE=/bin/date function check(){ HTTP_CODE=$(curl -G -m 10 -o /dev/null -s -w %{http_code} $WEB_URL) echo &amp;#34;http response code:$HTTP_CODE&amp;#34; &amp;gt;&amp;gt;$LOG_FILE if [ $HTTP_CODE -eq 200 ] ; then $DATE +&amp;#34;%F %T %a&amp;#34; #&amp;gt;&amp;gt;$LOG_FILE echo &amp;#34;http response code:$HTTP_CODE&amp;#34; #&amp;gt;&amp;gt;$LOG_FILE else $DATE +&amp;#34;%F %T %a&amp;#34; #&amp;gt;&amp;gt;$FAIL_LOG_FILE echo &amp;#34;http response code:$HTTP_CODE&amp;#34; #&amp;gt;&amp;gt;$FAIL_LOG_FILE return 1 fi } n=5 for ((i=n;i&amp;gt;=1;i--)) do check result=$?</description>
    </item>
    
  </channel>
</rss>
