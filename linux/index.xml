<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxes on My New Hugo Site</title>
    <link>http://127.0.0.1:1313/hugo/linux/</link>
    <description>Recent content in Linuxes on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 04 Jan 2022 20:49:43 +0800</lastBuildDate><atom:link href="http://127.0.0.1:1313/hugo/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crontab</title>
      <link>http://127.0.0.1:1313/hugo/linux/crontab/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/crontab/</guid>
      <description>crontab  查看 crontab -l 编辑  crontab -e   如何配置  1 2 3 4 5 6 7 8  * * * * * - - - - - | | | | | | | | | +----- 星期中星期几 (0 - 6) (星期天 为0) | | | +---------- 月份 (1 - 12) | | +--------------- 一个月中的第几天 (1 - 31) | +-------------------- 小时 (0 - 23) +------------------------- 分钟 (0 - 59)     例子</description>
    </item>
    
    <item>
      <title>Date命令</title>
      <link>http://127.0.0.1:1313/hugo/linux/date%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/date%E5%91%BD%E4%BB%A4/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #!/usr/bin/env bash  year=`date +&amp;#34;%Y&amp;#34;` month=`date +&amp;#34;%-m&amp;#34;` day=`date +&amp;#34;%-d&amp;#34;` hour=`date +&amp;#34;%-H&amp;#34;` minute=`date +&amp;#34;%-M&amp;#34;` second=`date +&amp;#34;%-S&amp;#34;` week=`date +&amp;#34;%-w&amp;#34;` numWeek=`date +&amp;#34;%-W&amp;#34;` echo &amp;#34;year: &amp;#34;${year} echo &amp;#34;month: &amp;#34;${month} echo &amp;#34;day: &amp;#34;${day} echo &amp;#34;hour: &amp;#34;${hour} echo &amp;#34;minute: &amp;#34;${minute} echo &amp;#34;second: &amp;#34;${second} echo &amp;#34;week: &amp;#34;${week} echo &amp;#34;numWeek:&amp;#34;${numWeek} val=`expr ${numWeek} % 4` echo ${val}   </description>
    </item>
    
    <item>
      <title>Httpd</title>
      <link>http://127.0.0.1:1313/hugo/linux/httpd/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/httpd/</guid>
      <description>httpd访问网络配置httpd_can_network_connect 检查网络访问的配置
getsebool -a | grep httpd_can_network_connect
如结果如下
httpd_can_network_connect &amp;ndash;&amp;gt; off
则执行如下命令打开：
SELinux命令，临时配置，重启后失效 setsebool httpd_can_network_connect=1
写入配置文件的命令，重启后保留
setsebool -P httpd_can_network_connect 1</description>
    </item>
    
    <item>
      <title>linux好玩的</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E5%A5%BD%E7%8E%A9%E7%9A%84/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E5%A5%BD%E7%8E%A9%E7%9A%84/</guid>
      <description>linux 好玩 压缩  tar -zcvf soft.tar.gz /soft/ /dir /dir  解压  tar -zxvf /soft.tar.gz -C /  查看版本  cat /etc/issue 查看版本  shell脚本的运行方式 1.set -x 或set xtrace
会显示+以及脚本中的内容(执行的部分，没执行的不显示)
set -xv（脚本中所有的内容都显示，包括没执行的部分）
查看端口号 netstat -lnp|grep 8080
查找某个文件 1 2  ## 寻找某个文件 find . -name &amp;#34;*.tar&amp;#34;   软连接 1  ln -s /data/mysql3306/config/my.cnf /etc/mysql/my.cnf   查询服务详情 1  journalctl -u 服务名   5</description>
    </item>
    
    <item>
      <title>Parted</title>
      <link>http://127.0.0.1:1313/hugo/linux/parted/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/parted/</guid>
      <description>parted 规划分区   进入某个磁盘的分区
 parted /dev/sdb    新建标签类型
  mklabel
  1 2 3 4  (parted) mklabel 新的磁盘标签类型？ gpt 警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue? 是/Yes/否/No? yes       新建分区
  mkpart
  1 2 3 4 5  (parted) mkpart 分区名称？ []?</description>
    </item>
    
    <item>
      <title>Pve</title>
      <link>http://127.0.0.1:1313/hugo/linux/pve/pve/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/pve/pve/</guid>
      <description>查看集群资源状况  1  pvesh get /cluster/resources   取得虚拟机当前状态 1 2 3  pvesh get /nodes/&amp;lt;节点id&amp;gt;/qemu/&amp;lt;虚拟机id&amp;gt;/status/current pvesh get /nodes/pve/qemu/100/status/current   关闭虚拟机 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  pvesh create /nodes/&amp;lt;节点id&amp;gt;/qemu/&amp;lt;虚拟机id&amp;gt;/status/stop pvesh create /nodes/pve/qemu/990/status/start pvesh create /nodes/pve/qemu/176/status/start pvesh create /nodes/pve/qemu/255/status/start pvesh create /nodes/pve/qemu/201/status/start pvesh create /nodes/pve/qemu/100/status/start pvesh create /nodes/pve/qemu/399/status/start pvesh create /nodes/pve/qemu/103/status/start pvesh create /nodes/pve/qemu/101/status/start pvesh create /nodes/pve/qemu/174/status/start pvesh create /nodes/pve/qemu/104/status/start pvesh create /nodes/pve/qemu/777/status/start pvesh create /nodes/pve/qemu/102/status/start pvesh create /nodes/pve/qemu/173/status/start   挂载img文件 1  qm importdisk 990 /var/lib/vz/template/iso/openwrt-gdq-v9-1_2021_-x86-64-generic-squashfs-uefi.</description>
    </item>
    
    <item>
      <title>Pve崩溃</title>
      <link>http://127.0.0.1:1313/hugo/linux/pve/pve%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/pve/pve%E5%B4%A9%E6%BA%83/</guid>
      <description>pve 故障 1.pve 集群崩溃  cluster not ready - no quorum? (500)  1、隔离节点上停止 pve-cluster 服务 1 2  systemctl stop pve-cluster.service systemctl stop corosync.service   2、上一步执行成功后，执行将待隔离节点的集群文件系统设置为本地模式的命令 1  pmxcfs -l   3、上一步执行成功后，执行删除 corosync 配置文件的命令 1 2  rm /etc/pve/corosync.conf rm -rf /etc/corosync/*   4、前3步都执行成功后，执行重新启动集群文件系统服务的命令 1 2  killall pmxcfs systemctl start pve-cluster.service   5、删除故障节点node文件 1 2 3  cd /etc/pve/nodes ls rm -rf /etc/pve/nodes/pvepc #改成故障节点对应路径   </description>
    </item>
    
    <item>
      <title>Ssh</title>
      <link>http://127.0.0.1:1313/hugo/linux/ssh/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/ssh/</guid>
      <description>生成公钥和私钥 1  ssh-keygen -t ed25519 -C &amp;#34;984801940@qq.com&amp;#34;    后面第一个设置名字 后面设置访问密码 （免密当然就是这个）  </description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>http://127.0.0.1:1313/hugo/linux/deepin/vim/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/deepin/vim/</guid>
      <description>deepin-vim 针对用户  下载需要的包 到 家目录  1  wget --no-check-certificate https://raw.githubusercontent.com/vim/vim/master/runtime/vimrc_example.vim -O ~/.vimrc   针对全局用户  找到vim的 全局配置路径：   执行vim然后输入:echo $VIMRUNTIME  修改默认配置文件：sudo vim $VIMRUNTIME/defaults.vim 具体可以修改的文件的功能 可以用下面的 保存文件完成修改：  :wq    可以修改的配置 1 2 3 4 5 6 7 8 9 10 11 12 13  #设置语法高亮 echo &amp;#39;syntax on&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启行号显示【标准方式】或上面的【简写方式】也可以 echo &amp;#39;set number&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启行号显示【简写方式】或下面的【标准方式】也可以 echo &amp;#39;set nu&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启拼写检查 echo &amp;#39;set spell&amp;#39; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>定制化iso</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E5%AE%9A%E5%88%B6%E5%8C%96iso/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E5%AE%9A%E5%88%B6%E5%8C%96iso/</guid>
      <description>定制化iso 1、准备环境 1.1 安装需要的包 1  yum install createrepo mkisofs isomd5sum squashfs-tools   1.2 创建需要的目录 1 2  mkdir /opt/centos mkdir /opt/old   1.3 上传基础安装包 1 2  网上下载：CentOS-7-x86_64-Minimal-1708.iso 上传到 /opt/   1.4 挂载 1  mount /opt/CentOS-7-x86_64-Minimal-1708.iso /opt/old/   1.5 复制相关文件 1 2 3 4 5  cp -r /opt/old/* /opt/centos/ cp /opt/old/.discinfo /opt/centos/ cp /opt/old/.treeinfo /opt/centos/ cp /root/anaconda-ks.cfg /opt/centos/isolinux/base-ks.cfg chmod +w /opt/centos/isolinux/base-ks.cfg   1.</description>
    </item>
    
    <item>
      <title>离线安装mysql</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Tue, 04 Jan 2022 20:49:43 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85mysql/</guid>
      <description>离线安装mysql
1.查看是否安装
1 2  rpm -qa | grep mariadb rpm -qa | grep mysql   2.如果已安装则卸载rpm
rpm -e &amp;ndash;nodeps
&amp;ndash;nodeps:由于安装包的依赖问题，需要强制删除
3.下载rpm包
   rpm包     mysql-community-client   mysql-community-devel   mysql-community-libs   mysql-community-server   mysql-community-libs   mysql-community-common    4.将rpm包通过xftp等方式放入linux服务器
5.根据rpm安装
到rpm包目录下使用命令
1  rpm -ivh --force mysql-community-common-5.7.24-1.el7.x86_64.rpm mysql-community-libs-5.7.24-1.el7.x86_64.rpm mysql-community-client-5.7.24-1.el7.x86_64.rpm mysql-community-server-5.7.24-1.el7.x86_64.rpm mysql-community-devel-5.7.24-1.el7.x86_64.rpm mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm   6.启动mysql
1  service mysqld start   7.</description>
    </item>
    
  </channel>
</rss>
