<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxes on My New Hugo Site</title>
    <link>http://127.0.0.1:1313/hugo/linux/</link>
    <description>Recent content in Linuxes on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 05 Jan 2022 15:23:32 +0800</lastBuildDate><atom:link href="http://127.0.0.1:1313/hugo/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>7和yum完全卸载及重装</title>
      <link>http://127.0.0.1:1313/hugo/linux/yum/centos7_python2.7%E5%92%8Cyum%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%8F%8A%E9%87%8D%E8%A3%85/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/yum/centos7_python2.7%E5%92%8Cyum%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%8F%8A%E9%87%8D%E8%A3%85/</guid>
      <description>Centos7_python2.7和yum完全卸载及重装 删除现有Python  rpm -qa|grep python|xargs rpm -ev &amp;ndash;allmatches &amp;ndash;nodeps ##强制删除已安装程序及其关联 whereis python |xargs rm -frv ##删除所有残余文件 ##xargs，允许你对输出执行其他某些命令 whereis python ##验证删除，返回无结果  删除现有的yum  rpm -qa|grep yum|xargs rpm -ev &amp;ndash;allmatches &amp;ndash;nodeps whereis yum |xargs rm -frv  安装python以及yum的rpm包 安装python  cd /usr/local/src/python rpm -ivh python-* rpm-python-* &amp;ndash;nodeps &amp;ndash;force  安装yum  rpm -ivh yum-* &amp;ndash;nodeps &amp;ndash;force  </description>
    </item>
    
    <item>
      <title>Crontab</title>
      <link>http://127.0.0.1:1313/hugo/linux/crontab/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/crontab/</guid>
      <description>crontab  查看 crontab -l 编辑  crontab -e   如何配置  1 2 3 4 5 6 7 8  * * * * * - - - - - | | | | | | | | | +----- 星期中星期几 (0 - 6) (星期天 为0) | | | +---------- 月份 (1 - 12) | | +--------------- 一个月中的第几天 (1 - 31) | +-------------------- 小时 (0 - 23) +------------------------- 分钟 (0 - 59)     例子</description>
    </item>
    
    <item>
      <title>Date命令</title>
      <link>http://127.0.0.1:1313/hugo/linux/date%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/date%E5%91%BD%E4%BB%A4/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #!/usr/bin/env bash  year=`date +&amp;#34;%Y&amp;#34;` month=`date +&amp;#34;%-m&amp;#34;` day=`date +&amp;#34;%-d&amp;#34;` hour=`date +&amp;#34;%-H&amp;#34;` minute=`date +&amp;#34;%-M&amp;#34;` second=`date +&amp;#34;%-S&amp;#34;` week=`date +&amp;#34;%-w&amp;#34;` numWeek=`date +&amp;#34;%-W&amp;#34;` echo &amp;#34;year: &amp;#34;${year} echo &amp;#34;month: &amp;#34;${month} echo &amp;#34;day: &amp;#34;${day} echo &amp;#34;hour: &amp;#34;${hour} echo &amp;#34;minute: &amp;#34;${minute} echo &amp;#34;second: &amp;#34;${second} echo &amp;#34;week: &amp;#34;${week} echo &amp;#34;numWeek:&amp;#34;${numWeek} val=`expr ${numWeek} % 4` echo ${val}   </description>
    </item>
    
    <item>
      <title>Httpd</title>
      <link>http://127.0.0.1:1313/hugo/linux/httpd/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/httpd/</guid>
      <description>httpd访问网络配置httpd_can_network_connect 检查网络访问的配置
getsebool -a | grep httpd_can_network_connect
如结果如下
httpd_can_network_connect &amp;ndash;&amp;gt; off
则执行如下命令打开：
SELinux命令，临时配置，重启后失效 setsebool httpd_can_network_connect=1
写入配置文件的命令，重启后保留
setsebool -P httpd_can_network_connect 1</description>
    </item>
    
    <item>
      <title>Jar简易自检程序</title>
      <link>http://127.0.0.1:1313/hugo/linux/shell/jar%E7%AE%80%E6%98%93%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/shell/jar%E7%AE%80%E6%98%93%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</guid>
      <description>jar 简易自检程序  脚本  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  #!/bin/sh #line=&amp;#39;cat .</description>
    </item>
    
    <item>
      <title>linux下文件操作命令</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E4%B8%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E4%B8%8B%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</guid>
      <description>Linux下文件操作命令  tar命令  使用tar命令一般打包分为两种*.tar ,*.tar.gz 相信大家也使用过 tar -zcvf test.tar test/  tar -zcvf test.tar.gz test/ 两条命令为：将当前文件夹下的test文件夹中的所有数据压缩至test.tar* 解压后是 test/ 解压命令为：tar -zxvf **.tar tar -zxvf **.tar.gz  zip命令  压缩命令： zip -r test.zip test/ 解压命令： unzip test.zip &amp;ndash;解压至当前文件夹中   复制命令  cp test.zip /data/test &amp;ndash;将test.zip复制到/data/test中  cp -r test.zip /data/test &amp;ndash;将test.zip覆盖复制到/data/test中 /data/test路径中有test.zip 则直接替换  上传下载命令  rz 上传 会弹出本地窗口，选择文件 点击确定即可上传 scp 本地文件 远程主机用户@远程主机IP：远程目录 此命令需要输入密码 scp test.zip htga@192.168.200.128:/home/htga  </description>
    </item>
    
    <item>
      <title>linux主机名</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E4%B8%BB%E6%9C%BA%E5%90%8D/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E4%B8%BB%E6%9C%BA%E5%90%8D/</guid>
      <description>Linux系统的主机名 查询主机名  hostname hostnamectl  修改主机名 1  hostnamectl set-hostname &amp;lt;newhostname&amp;gt;   </description>
    </item>
    
    <item>
      <title>linux信号</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E4%BF%A1%E5%8F%B7/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E4%BF%A1%E5%8F%B7/</guid>
      <description>SIGHUP 终止进程 终端线路挂断[喝小酒的网摘]http://blog.hehehehehe.cn/a/16999.htm SIGINT 终止进程 中断进程 SIGQUIT 建立CORE文件终止进程，并且生成core文件 SIGILL 建立CORE文件 非法指令 SIGTRAP 建立CORE文件 跟踪自陷 SIGBUS 建立CORE文件 总线错误 SIGSEGV 建立CORE文件 段非法错误 SIGFPE 建立CORE文件 浮点异常 SIGIOT 建立CORE文件 执行I/O自陷 SIGKILL 终止进程 杀死进程 SIGPIPE 终止进程 向一个没有读进程的管道写数据 SIGALARM 终止进程 计时器到时 SIGTERM 终止进程 软件终止信号 SIGSTOP 停止进程 非终端来的停止信号 SIGTSTP 停止进程 终端来的停止信号 SIGCONT 忽略信号 继续执行一个停止的进程 SIGURG 忽略信号 I/O紧急信号 SIGIO 忽略信号 描述符上可以进行I/O SIGCHLD 忽略信号 当子进程停止或退出时通知父进程 SIGTTOU 停止进程 后台进程写终端 SIGTTIN 停止进程 后台进程读终端 SIGXGPU 终止进程 CPU时限超时 SIGXFSZ 终止进程 文件长度过长 SIGWINCH 忽略信号 窗口大小发生变化 SIGPROF 终止进程 统计分布图用计时器到时 SIGUSR1 终止进程 用户定义信号1 SIGUSR2 终止进程 用户定义信号2 SIGVTALRM 终止进程 虚拟计时器到时</description>
    </item>
    
    <item>
      <title>linux好玩的</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E5%A5%BD%E7%8E%A9%E7%9A%84/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E5%A5%BD%E7%8E%A9%E7%9A%84/</guid>
      <description>linux 好玩 压缩  tar -zcvf soft.tar.gz /soft/ /dir /dir  解压  tar -zxvf /soft.tar.gz -C /  查看版本  cat /etc/issue 查看版本  shell脚本的运行方式 1.set -x 或set xtrace
会显示+以及脚本中的内容(执行的部分，没执行的不显示)
set -xv（脚本中所有的内容都显示，包括没执行的部分）
查看端口号 netstat -lnp|grep 8080
查找某个文件 1 2  ## 寻找某个文件 find . -name &amp;#34;*.tar&amp;#34;   软连接 1  ln -s /data/mysql3306/config/my.cnf /etc/mysql/my.cnf   查询服务详情 1  journalctl -u 服务名   同步 1  rsync -avl /docker/software/MSSQL/ /home/data/mssql   </description>
    </item>
    
    <item>
      <title>linux用户</title>
      <link>http://127.0.0.1:1313/hugo/linux/linux%E7%94%A8%E6%88%B7/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/linux%E7%94%A8%E6%88%B7/</guid>
      <description>linux 用户 1、用户相关 1.1useradd  useradd 选项 用户名  1.2passwd  passwd 选项 用户名  1.3 例子： 1.3.1创建用户testuser 主目录为home/testuser 1  useradd –d /home/testuser -m testuser   1.3.2给testuser 创建密码 1  passwd testuser   1.3.3 删除用户 1  userdel testuser   1.3.4 切换用户  switch user 简写 su  su testuser 切到testuser exit 可以退出 su - testuser 切换到testuser 且切换环境变量 exit 可以退出    2、 用户组相关 /etc/group 2.</description>
    </item>
    
    <item>
      <title>Parted</title>
      <link>http://127.0.0.1:1313/hugo/linux/parted/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/parted/</guid>
      <description>parted 规划分区   进入某个磁盘的分区
 parted /dev/sdb    新建标签类型
  mklabel
  1 2 3 4  (parted) mklabel 新的磁盘标签类型？ gpt 警告: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue? 是/Yes/否/No? yes       新建分区
  mkpart
  1 2 3 4 5  (parted) mkpart 分区名称？ []?</description>
    </item>
    
    <item>
      <title>Pve</title>
      <link>http://127.0.0.1:1313/hugo/linux/pve/pve/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/pve/pve/</guid>
      <description>查看集群资源状况  1  pvesh get /cluster/resources   取得虚拟机当前状态 1 2 3  pvesh get /nodes/&amp;lt;节点id&amp;gt;/qemu/&amp;lt;虚拟机id&amp;gt;/status/current pvesh get /nodes/pve/qemu/100/status/current   关闭虚拟机 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  pvesh create /nodes/&amp;lt;节点id&amp;gt;/qemu/&amp;lt;虚拟机id&amp;gt;/status/stop pvesh create /nodes/pve/qemu/990/status/start pvesh create /nodes/pve/qemu/176/status/start pvesh create /nodes/pve/qemu/255/status/start pvesh create /nodes/pve/qemu/201/status/start pvesh create /nodes/pve/qemu/100/status/start pvesh create /nodes/pve/qemu/399/status/start pvesh create /nodes/pve/qemu/103/status/start pvesh create /nodes/pve/qemu/101/status/start pvesh create /nodes/pve/qemu/174/status/start pvesh create /nodes/pve/qemu/104/status/start pvesh create /nodes/pve/qemu/777/status/start pvesh create /nodes/pve/qemu/102/status/start pvesh create /nodes/pve/qemu/173/status/start   挂载img文件 1  qm importdisk 990 /var/lib/vz/template/iso/openwrt-gdq-v9-1_2021_-x86-64-generic-squashfs-uefi.</description>
    </item>
    
    <item>
      <title>Pve崩溃</title>
      <link>http://127.0.0.1:1313/hugo/linux/pve/pve%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/pve/pve%E5%B4%A9%E6%BA%83/</guid>
      <description>pve 故障 1.pve 集群崩溃  cluster not ready - no quorum? (500)  1、隔离节点上停止 pve-cluster 服务 1 2  systemctl stop pve-cluster.service systemctl stop corosync.service   2、上一步执行成功后，执行将待隔离节点的集群文件系统设置为本地模式的命令 1  pmxcfs -l   3、上一步执行成功后，执行删除 corosync 配置文件的命令 1 2  rm /etc/pve/corosync.conf rm -rf /etc/corosync/*   4、前3步都执行成功后，执行重新启动集群文件系统服务的命令 1 2  killall pmxcfs systemctl start pve-cluster.service   5、删除故障节点node文件 1 2 3  cd /etc/pve/nodes ls rm -rf /etc/pve/nodes/pvepc #改成故障节点对应路径   </description>
    </item>
    
    <item>
      <title>sed</title>
      <link>http://127.0.0.1:1313/hugo/linux/sed/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/sed/</guid>
      <description>[toc]
sed命令简介 sed处理时，有2个缓冲区：【pattern space】和【hold space】
sed执行过程： 先读入一行，去掉尾部换行符，存入【pattern space】，执行编辑命令。
处理完毕，除非加了-n参数，把现在的【pattern space】打印出来，在后边打印曾去掉的换行符。
把【pattern space】置空。 接着读下一行，处理下一行。
sed的默认输出：【pattern space】里的内容输出到标准输出。
sed的常用选项：   【pattern space】里的内容不输出到标准输出：-n
  默认只能执行一个脚本，执行多个脚本：-e script, &amp;ndash;expression=script
可以有多个-e script
  如果要执行的脚本特别多，可以指定一个脚本文件：-f /path/to/sed_scirpt
脚本文件里，每行一个编辑命令。
  支持使用扩展的正则表达式，默认是基本正则表达式：-r
  直接编辑原文件：-i
  把【pattern space】空间中的内容覆盖到【hold space】空间：h
  把【pattern space】空间中的内容追加到【hold space】空间，然后删除【pattern space】空间中的内容：H
  把【hold space】空间中的内容覆盖到【pattern space】空间：g
  把【hold space】空间中的内容追加到【pattern space】空间，然后删除【hold space】空间中的内容：G
  互换【hold space】【pattern space】里的内容：x
  把匹配到的行的下一行放入【pattern space】，并把匹配到的行删除掉：n
  把匹配到的行的下一行放入【pattern space】，不删除匹配到的行：N</description>
    </item>
    
    <item>
      <title>Ssh</title>
      <link>http://127.0.0.1:1313/hugo/linux/ssh/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/ssh/</guid>
      <description>生成公钥和私钥 1  ssh-keygen -t ed25519 -C &amp;#34;984801940@qq.com&amp;#34;    后面第一个设置名字 后面设置访问密码 （免密当然就是这个）  </description>
    </item>
    
    <item>
      <title>Tomcat自检程序</title>
      <link>http://127.0.0.1:1313/hugo/linux/shell/tomcat%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/shell/tomcat%E8%87%AA%E6%A3%80%E7%A8%8B%E5%BA%8F/</guid>
      <description>tomcat自检 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  #!/bin/bash PROC_NAME=Bootstrap PROC_PATH=/home/test/tomcat/apache-tomcat-7.0.70/bin PROC_START_SH_PATH=/home/test/tomcat/apache-tomcat-7.0.70/bin PROC_START_SH_NAME=startup.sh LOG_FILE=/home/cjpt/test/logs/process_check.log FAIL_LOG_FILE=/home/test/tomcat/logs/process_check_fail.log WEB_URL=&amp;#34;URL:&amp;#34; PROC_ROOT_PATH=/home/test/tomcat/apache-tomcat-7.0.70/ JAVA_HOME_MY=/home/test/jdk/jdk1.8 JRE_HOME_MY=/home/test/jdk/jdk1.8/jre DATE=/bin/date function check(){ HTTP_CODE=$(curl -G -m 10 -o /dev/null -s -w %{http_code} $WEB_URL) echo &amp;#34;http response code:$HTTP_CODE&amp;#34; &amp;gt;&amp;gt;$LOG_FILE if [ $HTTP_CODE -eq 200 ] ; then $DATE +&amp;#34;%F %T %a&amp;#34; #&amp;gt;&amp;gt;$LOG_FILE echo &amp;#34;http response code:$HTTP_CODE&amp;#34; #&amp;gt;&amp;gt;$LOG_FILE else $DATE +&amp;#34;%F %T %a&amp;#34; #&amp;gt;&amp;gt;$FAIL_LOG_FILE echo &amp;#34;http response code:$HTTP_CODE&amp;#34; #&amp;gt;&amp;gt;$FAIL_LOG_FILE return 1 fi } n=5 for ((i=n;i&amp;gt;=1;i--)) do check result=$?</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>http://127.0.0.1:1313/hugo/linux/deepin/vim/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/deepin/vim/</guid>
      <description>deepin-vim 针对用户  下载需要的包 到 家目录  1  wget --no-check-certificate https://raw.githubusercontent.com/vim/vim/master/runtime/vimrc_example.vim -O ~/.vimrc   针对全局用户  找到vim的 全局配置路径：   执行vim然后输入:echo $VIMRUNTIME  修改默认配置文件：sudo vim $VIMRUNTIME/defaults.vim 具体可以修改的文件的功能 可以用下面的 保存文件完成修改：  :wq    可以修改的配置 1 2 3 4 5 6 7 8 9 10 11 12 13  #设置语法高亮 echo &amp;#39;syntax on&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启行号显示【标准方式】或上面的【简写方式】也可以 echo &amp;#39;set number&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启行号显示【简写方式】或下面的【标准方式】也可以 echo &amp;#39;set nu&amp;#39; &amp;gt;&amp;gt; ~/.vimrc #开启拼写检查 echo &amp;#39;set spell&amp;#39; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>yum命令</title>
      <link>http://127.0.0.1:1313/hugo/linux/yum/yum%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/yum/yum%E5%91%BD%E4%BB%A4/</guid>
      <description>yum 命令 yum相关例子 一、只下载不安装  yum install &amp;ndash;downloadonly &amp;ndash;downloaddir=/soft/mysql mysql-community-server 只是下载 不安装  二、删除的例子  yum remove package1 删除程序包package1 yum groupremove group1 删除程序组group1 yum deplist package1 查看程序package1依赖情况  三、查找的粒子  yum info package1 显示安装包信息package1 yum list 显示所有已经安装和可以安装的程序包 yum list package12 显示指定程序包安装情况package12 yum groupinfo group1 显示程序组group1信息yum search string 根据关键字string查找安装包  四、安装的例子  yum install 全部安装 yum install package1 安装指定的安装包package1 yum groupinsall group1 安装程序组group1  五、更新和升级  yum update 全部更新 yum update package1 更新指定程序包package1 yum check-update 检查可更新的程序 yum upgrade package1 升级指定程序包package1 yum groupupdate group1 升级程序组group1  六、清楚缓存  yum clean packages 清除缓存目录下的软件包 yum clean headers 清除缓存目录下的 headers yum clean oldheaders 清除缓存目录下旧的 headers yum clean, yum clean all (= yum clean packages; yum clean oldheaders) 清除缓存目录下的软件包及旧的headers  </description>
    </item>
    
    <item>
      <title>使用本地源</title>
      <link>http://127.0.0.1:1313/hugo/linux/yum/%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E6%BA%90/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/yum/%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E6%BA%90/</guid>
      <description>使用本地源 使用 createrepo 制作的本地源  上传压缩包到/ 根目录 解压安装包  tar -zxvf /soft.tar.gz -C /   备份原来的配置  创建备份位置 mkdir /etc/yum.repos.d/bak 备份原来源 cp /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak   删除原来的yum源 （有网可以跳过）  rm -rf /etc/yum.repos.d/*.repo   创建文件  touch /etc/yum.repos.d/test.repo   文件里写入内容 1 2 3 4 5  [local-yum] name=local-yum baseurl=file:///soft enabled=1 gpgcheck=0    清除原先的yum缓存  yum clean all   缓存yum  yum makecache   缓存可以了，此本地源可以在无网条件下使用  脚本的sh</description>
    </item>
    
    <item>
      <title>华为客户端安装</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E5%8D%8E%E4%B8%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E5%8D%8E%E4%B8%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85/</guid>
      <description>华为客户端安装 安装环境   服务器 13.8.133.247 普通用户 htga   1. 登录https://13.104.24.70:28443/web/下载客户端压缩包 2. 点击服务管理，进入如下界面 3. 点击下载客户端 4. 创建目录 resource   cd /home/htga/ (进入htga目录) mkdir resource (创建resource目录) cd resource (进入resource目录)   5.将压缩包FusionInsight_Services_Client.tar上传到rsource目录下 6.解压 FusionInsight_Services_Client.tar   tar -xvf FusionInsight_Services_Client.tar   7.校验软件包   sha256sum -c FusionInsight_Services_ClientConfig.tar.sha256 提示FusionInsight_Services_ClientConfig.tar: OK说明校验成功   8.解压的安装文件FusionInsight_Services_ClientConfig.tar   tar -xvf FusionInsight_Services_ClientConfig.tar   9.配置客户端网络连接   cd /home/htga/resource/FusionInsight_Services_ClientConfig/ (进入FusionInsight_Services_ClientConfig) vim hosts 复制hosts下的ip地址 su - root (切换到root账户) vim /etc/hosts （打开hosts文件） 按I进入编辑模式，把刚才复制的ip地址给粘贴到这个文件中，按esc退出编辑模式，保存退出 su - htga（切回到htga账户）   10.</description>
    </item>
    
    <item>
      <title>定制化iso</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E5%AE%9A%E5%88%B6%E5%8C%96iso/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E5%AE%9A%E5%88%B6%E5%8C%96iso/</guid>
      <description>定制化iso 1、准备环境 1.1 安装需要的包 1  yum install createrepo mkisofs isomd5sum squashfs-tools   1.2 创建需要的目录 1 2  mkdir /opt/centos mkdir /opt/old   1.3 上传基础安装包 1 2  网上下载：CentOS-7-x86_64-Minimal-1708.iso 上传到 /opt/   1.4 挂载 1  mount /opt/CentOS-7-x86_64-Minimal-1708.iso /opt/old/   1.5 复制相关文件 1 2 3 4 5  cp -r /opt/old/* /opt/centos/ cp /opt/old/.discinfo /opt/centos/ cp /opt/old/.treeinfo /opt/centos/ cp /root/anaconda-ks.cfg /opt/centos/isolinux/base-ks.cfg chmod +w /opt/centos/isolinux/base-ks.cfg   1.</description>
    </item>
    
    <item>
      <title>更换yum仓库</title>
      <link>http://127.0.0.1:1313/hugo/linux/yum/%E6%9B%B4%E6%8D%A2yum%E4%BB%93%E5%BA%93/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/yum/%E6%9B%B4%E6%8D%A2yum%E4%BB%93%E5%BA%93/</guid>
      <description>修改CentOS默认yum源为国内yum镜像源 (163的) centos7的一些镜像源
修改步骤  备份原来的yum  mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup   进入yum源配置文件所在的文件夹  cd /etc/yum.repos.d/   下载国内镜像源配置文件  wget http://mirrors.163.com/.help/CentOS7-Base-163.repo   运行yum makecache生成缓存  yum makecache    一些 repo的说明  目录地址： /etc/yum.repos.d/ 里面是原来源 可以删除 相关内容字段说明  1 2 3 4 5 6 7 8 9 10 11 12  [local-yum] name=local-yum baseurl=file:///home/test/local-yum/ enabled=1 gpgcheck=0 [....] 代表这个库的名字，必须是唯一的，不可以重复。 name＝ 是这个库的说明，没有太大的实际意义，只是一个字段说明。 baseurl＝ 说明采取什么方式传输，具体路径在哪里，可以使用的方式有,file:///，ftp://，http://等 enabled=1 说明启用这个更新库，0表示不启用。 gpgcheck=1 表示使用gpg文件来检查软件包的签名 gpgkey= 表示gpg文件所存放的位置，此处也可以有http方式的位置。   </description>
    </item>
    
    <item>
      <title>本地源制作</title>
      <link>http://127.0.0.1:1313/hugo/linux/yum/%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%88%B6%E4%BD%9C/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/yum/%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%88%B6%E4%BD%9C/</guid>
      <description>制作本地源 通过 createrepo 制作本地源 + 前提 : 前提制作本地源的机器可以安装 这个软件 例如 下载nginx的时候 自己加上 nginx的yum的数据源 （rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm）   下载安装 createrepo  yum -y install createrepo   下载需要的yum源  yumdownloader &amp;ndash;resolve &amp;ndash;destdir /soft/mysql mysql-community-server 只是下载 不安装 下载的目录为/soft/mysql 下载的软件 mysql yum install &amp;ndash;downloadonly &amp;ndash;downloaddir=/soft/httpd httpd 只是下载 不安装 下载的目录为/soft/nginx 下载的软件 nginx   为下载的rpm 制作 索引  createrepo /soft 给 /soft 文件夹 内 rpm包建立索引 createrepo &amp;ndash;update /soft 给 /soft 文件夹 内 rpm包 更新索引   压缩 建立好索引的文件  tar -zcvf soft.</description>
    </item>
    
    <item>
      <title>离线安装mysql</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85mysql/</guid>
      <description>离线安装mysql
1.查看是否安装
1 2  rpm -qa | grep mariadb rpm -qa | grep mysql   2.如果已安装则卸载rpm
rpm -e &amp;ndash;nodeps
&amp;ndash;nodeps:由于安装包的依赖问题，需要强制删除
3.下载rpm包
   rpm包     mysql-community-client   mysql-community-devel   mysql-community-libs   mysql-community-server   mysql-community-libs   mysql-community-common    4.将rpm包通过xftp等方式放入linux服务器
5.根据rpm安装
到rpm包目录下使用命令
1  rpm -ivh --force mysql-community-common-5.7.24-1.el7.x86_64.rpm mysql-community-libs-5.7.24-1.el7.x86_64.rpm mysql-community-client-5.7.24-1.el7.x86_64.rpm mysql-community-server-5.7.24-1.el7.x86_64.rpm mysql-community-devel-5.7.24-1.el7.x86_64.rpm mysql-community-libs-compat-5.7.24-1.el7.x86_64.rpm   6.启动mysql
1  service mysqld start   7.</description>
    </item>
    
    <item>
      <title>虚拟机安装 centos</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-centos/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-centos/</guid>
      <description>虚拟机安装 centos  路线图
主机(宿主机) &amp;mdash;&amp;gt; centos &amp;ndash;&amp;gt; docker &amp;ndash;&amp;gt; docker 镜像 &amp;ndash;&amp;gt; docker 容器 &amp;mdash; docker 服务
 1.前期准备  一台 主机 或者一台有虚拟软件的 主机 虚拟软件(vm, oracle vm virtualBox) 有centos镜像(最小化安装的centos)  2. 下载centos镜像  查询下载地址 https://mirrors.tuna.tsinghua.edu.cn/ 下载地址: https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso  3. 配置centos镜像 3.1 新建虚拟机信息 3.2 编辑虚拟机名称 3.3 配置虚拟机内存大小 3.4 配置虚拟硬盘 选择新建 3.5 配置虚拟硬盘文件类型 3.6 配置虚拟硬盘大小 3.7 选择虚拟硬盘 就是下载好的centos镜像 3.7.1选择后的图 4. 安装centos7 4.1开始安装centos 选择第一个 install centos 7 4.2 系统语言选择 选择英文 4.3 进去后第一个画面 4.</description>
    </item>
    
    <item>
      <title>防火墙firewalld</title>
      <link>http://127.0.0.1:1313/hugo/linux/%E9%98%B2%E7%81%AB%E5%A2%99firewalld/</link>
      <pubDate>Wed, 05 Jan 2022 15:23:32 +0800</pubDate>
      
      <guid>http://127.0.0.1:1313/hugo/linux/%E9%98%B2%E7%81%AB%E5%A2%99firewalld/</guid>
      <description>centos7上的firewalld 的使用  一、firewalld的基本启动关闭命令  启动服务&amp;mdash;&amp;mdash;systemctl start firewalld 关闭服务&amp;mdash;&amp;mdash;systemctl stop firewalld 查看状态&amp;mdash;&amp;mdash;systemctl status firewalld 开机禁用&amp;mdash;&amp;mdash;systemctl disable firewalld 开机启用&amp;mdash;&amp;mdash;systemctl enable firewalld  二、firewalld的基本配置命令  查看所有打开的端口 &amp;mdash;&amp;ndash;firewall-cmd &amp;ndash;zone=public &amp;ndash;list-ports 更新防火墙规则 &amp;mdash;-（添加后必须更新）&amp;mdash;&amp;ndash;firewall-cmd &amp;ndash;reload 查看版本：&amp;mdash;&amp;mdash; firewall-cmd &amp;ndash;version 查看帮助：&amp;mdash;&amp;mdash; firewall-cmd &amp;ndash;help  三、firewalld常用规则命令  添加udp端口的1234 &amp;mdash;&amp;ndash; firewall-cmd &amp;ndash;zone=public &amp;ndash;add-port=1234/udp &amp;ndash;permanent （&amp;ndash;permanent永久生效，没有此参数重启后失效） 添加tcp端口的8080 &amp;mdash;&amp;ndash; firewall-cmd &amp;ndash;zone=public &amp;ndash;add-port=8080/tcp 查看tcp端口的8080 &amp;mdash;&amp;ndash; firewall-cmd &amp;ndash;zone= public &amp;ndash;query-port=8080/tcp 删除tcp端口的8080 &amp;mdash;&amp;ndash; firewall-cmd &amp;ndash;zone= public &amp;ndash;remove-port=8080/tcp &amp;ndash;permanent  四.firewalld 常用family命令 firewall-cmd &amp;ndash;permanent &amp;ndash;add-rich-rule=&amp;ldquo;rule family=&amp;ldquo;ipv4&amp;rdquo; source address=&amp;ldquo;192.</description>
    </item>
    
  </channel>
</rss>
